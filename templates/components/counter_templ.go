// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "fmt"

func Counter(value int, maxValue int) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div id=\"counter-container\" class=\"box\"><div class=\"has-text-centered\"><!-- Counter buttons first --><div class=\"field is-grouped is-grouped-centered mb-5\"><p class=\"control\"><button class=\"button is-primary\" hx-post=\"/decrement\" hx-target=\"#counter-container\" hx-swap=\"outerHTML\"><span class=\"icon is-small\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\" clip-rule=\"evenodd\"></path></svg></span> <span>Decrement</span></button></p><p class=\"control\"><span id=\"counter\" class=\"tag is-large is-bulma-primary-soft\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprint(value))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/counter.templ`, Line: 26, Col: 91}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</span></p><p class=\"control\"><button class=\"button is-primary\" hx-post=\"/increment\" hx-target=\"#counter-container\" hx-swap=\"outerHTML\"><span class=\"icon is-small\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clip-rule=\"evenodd\"></path></svg></span> <span>Increment</span></button></p></div><!-- Max value display --><div class=\"content has-text-centered mb-5\"><p>Current Max Value: <span id=\"current-max\" class=\"tag is-info is-medium\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprint(maxValue))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/counter.templ`, Line: 47, Col: 105}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</span></p></div><!-- Form with local AlpineJS validation --><div class=\"mt-5\" x-data=\"{ maxCount: &#39;&#39;, error: &#39;&#39; }\"><form hx-post=\"/set-max\" hx-target=\"#counter-container\" hx-swap=\"outerHTML\"><div class=\"field has-addons\"><div class=\"control is-expanded\"><input id=\"max-input\" class=\"input\" type=\"number\" name=\"max\" min=\"1\" max=\"100\" placeholder=\"Enter max value (1-100)\" required x-model.number=\"maxCount\" @input=\"error = (maxCount &lt; 1 || maxCount &gt; 100) ? &#39;Value must be between 1 and 100&#39; : &#39;&#39;\" :class=\"{ &#39;is-danger&#39;: error !== &#39;&#39; }\"></div><div class=\"control\"><button class=\"button is-info\" type=\"submit\" :disabled=\"error !== &#39;&#39;\"><span class=\"icon is-small\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\" clip-rule=\"evenodd\"></path></svg></span> <span>Max Count</span></button></div></div><!-- Error message display --><p class=\"help is-danger\" x-show=\"error !== &#39;&#39;\" x-text=\"error\"></p></form></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
